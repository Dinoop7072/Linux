#######Learning linux###########


Important notes

Sys admin
1. Dealing eith black screen -- bash scripting
2. Handle users -- dormant accounts - an account that a user left the company or a user went for long vaccation etc
3. Backing up important data
4. PAckage management -- Os upto date?

Sys admin should not be a fire fighter -- find out problems beofre they occur -- performance analysis and system monitoring

Finding help -- huge number of commands -- use man pages.

##Linux flavours###

All linux types have same linux kernel. Differ in software installation and package management.

Most common:
1. Red Hat
2. Debian
3. SUSE

How to choose?
will software work on it?
Does vendor supply patches?
Decent and fast support?

####How to find help?#######
MAN page

stands for manual
type: man command

several sections:
Commands and applications (man1)
System calls (man2)
Library calls (man3)
Drivers (man4)
Files (man5)

For eg: View docmn of smb.conf file type:
man 5 smb.conf

But to learn various options use:
man1 smblclient

Section number is automatically determined by man
eg: passwd is a command and file at the same time
So to see the file documentation type:
man 5 passw

we can use ctrl + b  to move backwards and ctrl + f to move forward in man page.

IF you want to search for a specific man page:
type:
man - k

If you want to get multiple man pages
man -a (commands)

IF you want to search in the title only
man -af (something)
A lot of commands provide help if we type command alone without arguments
or when you follow it by --help or -h flag

If want to know if command is installed or not use
whatis (command)

AS new software gets installed sometimes it needs to be updated
Redhat: makewhatis
Ubuntu,SUSE: mandb

To get more details on list of files.
ls -ltr

to display contents in file
cat filename
more filename

Find the path of a command:
which (command)

history -- find history

want timestamp in history? Try this...
export HISTTIMEFORMAT="%d/%m/%y %T "

Find the space taken by a file
du

find the file and directory sizes in current lctn
du -h --max-depth=1 *

Empty a file withour deleting
echo > file

Other online documentation
linux.com
kernel.org
Serverfault.com

To find the details of current linux distribution
uname -a
uname -r

Drawbacks of traditional installations
traditional - packahes obtained in .tar.gz files
Done by decompressing file to directory or compiling from source code using - ./configure and makeinstall

 - no dependencies handling
 - overwrite customized config files
 - hard to uninstall if it was compiled from source

how to see the installations in tar.gx file
tar -xvf filename

That's why packages exist
 - they preserve cofniguration filees
 - new version add? - pkg.rpm.new.
 - httpd new version install - the httpd.conf is created as http.conf.rpmnew
 - Dependencies conisdered duirng installtions
 - pre and post install scripts can be depoloyed with app
 - multiple packages can be wraped inside same package for complex installations.
 -  Easily uninstalled including to excluding dependencies

Linux package types
1. RPM - Red hat package - used bu red hat ann those based systems as well as SUSE  Ends in .rpm
2. Debian : ubuntu and other debain used. Ends with .deb

RPM installtion - rpm command used
rpm -i
rpm -U --update
Debian installation - dpkg command is used

Both commands
1. No dependency handling
2. cant search package
3. no metadata offer about pkg

Solution to this:
Yellow Dog Updater, Modified (yum)
Advanced Package Tool (APT)
ZYpper

What is actually a linux package?
 In Linux distributions, a “package” refers to a compressed file archive containing all
of the files that come with a particular application. The files are usually stored in the
package according to their relative installation paths on your system.
Most packages also contain installation instructions for the OS, as well as a list of
any other packages that are dependencies (prerequisites required for installation.

Common types of Linux packages include .deb, .rpm, and .tgz.
Since Linux packages do not usually contain the dependencies necessary to install them, many Linux distributions use
package managers that automatically read dependencies files and download the packages needed before proceeding with
the installation. Some examples of package managers are APT, YUM, and Pacman.


Red hat's rpm
Install, validate & search for packages.
useful options:
-i install
-U upgrade
-e erase
-q query  -- need to be combined. rpm -qa -  displays all packages installed in system.

        rpm -qa | grep package - whether pkg installed or not

        The grep filter searches a file for a particular pattern of characters, and displays all lines that contain that pattern.
        https://www.geeksforgeeks.org/grep-command-in-unixlinux/

no dependecy handling
if tried to install vim
vim -i vi    - cant installed as requires dependencies


Debian's dpkg
Same role of rpm on debian packages.
--install
--remove
-l - display installed packages.

dpkg -l | grep package     - check whether installed or not

No dependency - it will be installed. eg: htop

Package management systems:
- solve shortcomings of rpm and dpkg
- They can search, locate, install pkgs automatically
- Use repository. A repo , container with packages, with respecyive metadata
- Each vendor offer its own repository.
- offered for download in http ot ftp.
- install using yum install or apt-get install for redhat and Ubuntu respectively.
- this handles searching, downloading with all it's dependencies.



Before isntalling use
apt-get update     -   to update repos.
configure by editing /etc/apt/sources.list. This file contains source URLs.
neednt change file if want to use own APT repo

Sources.list   -   contains different types of packages supported by ubuntu(main), unsuppoerted open source
packages (universe) and paid unsupported pkgs (multiverse). Each have updates or bug fixes.
